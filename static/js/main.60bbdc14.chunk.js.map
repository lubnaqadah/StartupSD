{"version":3,"sources":["images/Startup-San-Diego-Logo.png","Components/FontSize/FontSize.js","Components/Speakersgram/Speakersgram.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FontSize","handleSelect","evt","_this","props","nameFont","react_default","a","createElement","es","controlId","componentClass","placeholder","onChange","this","value","React","Component","Speakersgram","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","target","name","setState","defineProperty","fileChangedHandler","image","URL","createObjectURL","files","state","title","nameFS","jobTitle","titleFS","company","companyFS","discription","when","where","show","modal","bind","assertThisInitialized","handleShow","handleClose","download","window","open","size","html2canvas","document","getElementById","then","canvas","toDataURL","className","md","type","Components_FontSize_FontSize","mdOffset","id","src","logo","toUpperCase","style","color","charAt","slice","onClick","bsStyle","onHide","Header","closeButton","Title","Body","rounded","Footer","href","App","Components_Speakersgram_Speakersgram","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60bbdc14.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Startup-San-Diego-Logo.228eca17.png\";","import React from \"react\";\r\nimport {FormControl, FormGroup} from 'react-bootstrap';\r\n\r\nclass FontSize extends React.Component {\r\n\r\n\r\n    handleSelect = evt => this.props.nameFont(evt);\r\n\r\nrender() {\r\n    return (\r\n        <FormGroup controlId=\"formControlsSelect\">\r\n            <FormControl componentClass=\"select\" placeholder=\"select\" onChange={this.handleSelect}>\r\n                <option value=\"Red\">Red</option>\r\n                <option value=\"Blue\">Blue</option>\r\n                <option value=\"Green\">Green</option>\r\n            </FormControl>\r\n        </FormGroup>\r\n\r\n        //            <div>\r\n        //                <FormGroup controlId=\"formControlsSelect\">\r\n        //                    <FormControl componentClass=\"select\" placeholder=\"select\">\r\n        //                        <option value=\"12\">12</option>\r\n        //                        <option value=\"14\">14</option>\r\n        //                        <option value=\"16\">16</option>\r\n        //                        <option value=\"18\">18</option>\r\n        //                        <option value=\"20\">20</option>\r\n        //                        <option value=\"22\">22</option>\r\n        //                        <option value=\"24\">24</option>\r\n        //                        <option value=\"26\">26</option>\r\n        //                        <option value=\"28\">28</option>\r\n        //                        <option value=\"30\">30</option>\r\n        //                        <option value=\"32\">32</option>\r\n        //                        <option value=\"34\">34</option>\r\n        //                        <option value=\"36\">36</option>\r\n        //                        <option value=\"38\">38</option>\r\n        //                        <option value=\"40\">40</option>\r\n        //                    </FormControl>\r\n        //                </FormGroup>\r\n        //            </div>\r\n\r\n    )\r\n}\r\n}\r\n\r\nexport default FontSize;","import React from \"react\";\r\nimport {FormControl, FormGroup, ControlLabel, Button, Col, Row,Grid,Image, Modal} from 'react-bootstrap';\r\nimport \"./Speakersgram.css\";\r\nimport html2canvas from 'html2canvas';\r\nimport logo from \"../../images/Startup-San-Diego-Logo.png\"\r\nimport FontSize from \"./../FontSize\";\r\n\r\nclass Speakersgram extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title:'',\r\n            name: '',\r\n            nameFS: '#4e5b69',\r\n            jobTitle:'',\r\n            titleFS: '12',\r\n            company:'',\r\n            companyFS:'12',\r\n            image:null,\r\n            discription: '',\r\n            when:'',\r\n            where:'',\r\n            show: false,\r\n            modal: null\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.fileChangedHandler = this.fileChangedHandler.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.download = this.download.bind(this);\r\n        this.nameFont = this.nameFont.bind(this);\r\n    }\r\n\r\n    //function to handle any change in the form input\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    };\r\n\r\n// to take care of the image uploade\r\nfileChangedHandler = (event) => {\r\n    this.setState({\r\n        image: URL.createObjectURL(event.target.files[0])\r\n    })\r\n}\r\n\r\n// to close the card preview( to close the modal)\r\nhandleClose() {\r\n    this.setState({ show: false });\r\n}\r\n\r\n//to download the card\r\ndownload(){\r\n    window.open(this.state.modal)\r\n}\r\n\r\n// to change the font size\r\nnameFont(size){\r\n    this.setState({ nameFS: size.target.value})\r\n}\r\n\r\n// to preview the card \r\nasync handleShow () {\r\n    let canvas = await html2canvas(document.getElementById(\"my-node\")).then(function(canvas) {\r\n\r\n        return canvas\r\n    });\r\n    this.setState({modal:canvas.toDataURL(), show: true});\r\n}\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n\r\n        <Grid>\r\n            <Row>\r\n                <div className=\"banner_content\"></div>\r\n\r\n            </Row>\r\n            <Row className= \"row\">\r\n\r\n                <Col md={4}  >\r\n                    <form>\r\n                        <FormGroup controlId=\"formControlsText\">\r\n                            <ControlLabel>Title</ControlLabel>\r\n                            <FormControl type=\"text\" placeholder=\"Enter text\" name= \"title\" onChange={this.handleChange} />\r\n\r\n                        </FormGroup>\r\n\r\n                        <FormGroup controlId=\"formControlsText\">\r\n                            <ControlLabel>Name</ControlLabel>\r\n                            <FormControl type=\"text\" placeholder=\"Enter text\" name= \"name\" onChange={this.handleChange} />\r\n                            <FontSize nameFont = {this.nameFont}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup controlId=\"formControlsText\">\r\n                            <ControlLabel>Job Title</ControlLabel>\r\n                            <FormControl type=\"text\" placeholder=\"Enter text\" name= \"jobTitle\" onChange={this.handleChange} />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup controlId=\"formControlsText\">\r\n                            <ControlLabel>Company</ControlLabel>\r\n                            <FormControl type=\"text\" placeholder=\"Enter text\" name= \"company\" onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup controlId=\"formControlsText\">\r\n                            <ControlLabel>Discription</ControlLabel>\r\n                            <FormControl componentClass=\"textarea\" type=\"text\" placeholder=\"Enter text\" name= \"discription\" onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup controlId=\"formControlsText\">\r\n                            <ControlLabel>When</ControlLabel>\r\n                            <FormControl  type=\"date\" placeholder=\"Enter text\" name= \"when\" onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup controlId=\"formControlsText\">\r\n                            <ControlLabel>Where</ControlLabel>\r\n                            <FormControl componentClass=\"textarea\" type=\"text\" placeholder=\"Enter text\" name= \"where\" onChange={this.handleChange}/>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup controlId=\"\">\r\n                            <ControlLabel>Image</ControlLabel>\r\n                            <FormControl type=\"file\" name= \"image\" onChange={this.fileChangedHandler} />\r\n                        </FormGroup>\r\n\r\n                    </form>\r\n                </Col>  \r\n\r\n                <Col md={4} mdOffset={1} id=\"my-node\" className=\"imageBox\" >\r\n\r\n                    <div className=\"logo\" ><Image src={logo} /></div>\r\n                    <div className=\"title\"><h1>{this.state.title.toUpperCase()}</h1></div>\r\n                    <div className=\"name\" style={{color: this.state.nameFS}}><h1>{this.state.name.toUpperCase()}</h1></div>\r\n                    <div className=\"image\" ><Image src={this.state.image} /></div>\r\n                    <div className=\"jobTitle\"><h3>{this.state.jobTitle.charAt(0).toUpperCase() + this.state.jobTitle.slice(1)}{this.state.company ? \", \" + this.state.company.charAt(0).toUpperCase() + this.state.company.slice(1) : \"\"}</h3></div>                  \r\n                    <div className = \"description\"><p>{this.state.discription}</p></div>\r\n                    <div className = \"when\"><p>{this.state.when}</p></div>\r\n                    <div className = \"where\"><p>{this.state.where}</p></div>\r\n\r\n                    <div className=\"footer\"> <p>#STARTUPSD #SDSW2019</p></div>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={4}  mdOffset={2} id=\"my-node\" >\r\n                </Col>\r\n                <Col md={4} id=\"my-node\" >\r\n                    <Button onClick={this.handleShow} bsStyle=\"warning\">Preview</Button>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Modal show={this.state.show} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Speaker Gram</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Image className=\"canvas\" rounded src={this.state.modal} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                        <Button><a href={this.state.modal} download={this.state.name}>Download</a></Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n\r\n            </Row>\r\n        </Grid>\r\n    );\r\n}\r\n\r\n}\r\n\r\nexport default Speakersgram;\r\n","import React, { Component } from 'react';\nimport './App.css';\n//import { BrowserRouter, Route} from 'react-router-dom'\nimport Speakersgram from './Components/Speakersgram/Speakersgram';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Speakersgram />\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}